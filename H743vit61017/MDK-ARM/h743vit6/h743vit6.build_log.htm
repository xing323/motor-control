<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: ¦ÌVision V5.25.2.0
Copyright (C) 2018 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: a xing_jiyuan@163.com, aa, LIC=JDA0P-MBG8M-79ZG1-CCH0W-TK5DN-QRBA2
 
Tool Versions:
Toolchain:       MDK-ARM Professional  Version: 5.25.2.0
Toolchain Path:  D:\Keil_v5\ARM\ARMCC\Bin
C Compiler:      Armcc.exe V5.06 update 6 (build 750)
Assembler:       Armasm.exe V5.06 update 6 (build 750)
Linker/Locator:  ArmLink.exe V5.06 update 6 (build 750)
Library Manager: ArmAr.exe V5.06 update 6 (build 750)
Hex Converter:   FromElf.exe V5.06 update 6 (build 750)
CPU DLL:         SARMCM3.DLL V5.25.2.0
Dialog DLL:      DCM.DLL V1.17.1.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.1.0
Dialog DLL:      TCM.DLL V1.35.1.0
 
<h2>Project:</h2>
D:\CubeDocument\test1\H743\ALL0.0\H743vit61017\MDK-ARM\h743vit6.uvprojx
Project File Date:  09/26/2022

<h2>Output:</h2>
*** Using Compiler 'V5.06 update 6 (build 750)', folder: 'D:\Keil_v5\ARM\ARMCC\Bin'
Build target 'h743vit6'
compiling Ctrl_schedule.c...
user\Ctrl_schedule.c(192): warning:  #550-D: variable "M3"  was set but never used
  	uint8_t M1,M2,M3,M4,M5,M6;
user\Ctrl_schedule.c: 1 warning, 0 errors
compiling Dataex.c...
user\Dataex.c(504): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor1.curent = Motor1.curent*0.8 + (((float)Data[0] / 65536) * Vrefint + 0.001 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(504): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor1.curent = Motor1.curent*0.8 + (((float)Data[0] / 65536) * Vrefint + 0.001 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(504): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor1.curent = Motor1.curent*0.8 + (((float)Data[0] / 65536) * Vrefint + 0.001 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(505): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor2.curent = Motor2.curent*0.8 + (((float)Data[1] / 65536) * Vrefint + 0.003 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(505): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor2.curent = Motor2.curent*0.8 + (((float)Data[1] / 65536) * Vrefint + 0.003 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(505): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor2.curent = Motor2.curent*0.8 + (((float)Data[1] / 65536) * Vrefint + 0.003 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(506): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor3.curent = Motor3.curent*0.8 + (((float)Data[2] / 65536) * Vrefint         - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(506): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor3.curent = Motor3.curent*0.8 + (((float)Data[2] / 65536) * Vrefint         - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(507): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor4.curent = Motor4.curent*0.8 + (((float)Data[3] / 65536) * Vrefint + 0.002 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(507): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor4.curent = Motor4.curent*0.8 + (((float)Data[3] / 65536) * Vrefint + 0.002 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(507): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor4.curent = Motor4.curent*0.8 + (((float)Data[3] / 65536) * Vrefint + 0.002 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(508): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor5.curent = Motor5.curent*0.8 + (((float)Data[4] / 65536) * Vrefint         - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(508): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor5.curent = Motor5.curent*0.8 + (((float)Data[4] / 65536) * Vrefint         - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(509): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor6.curent = Motor6.curent*0.8 + (((float)Data[5] / 65536) * Vrefint + 0.002 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(509): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor6.curent = Motor6.curent*0.8 + (((float)Data[5] / 65536) * Vrefint + 0.002 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(509): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Motor6.curent = Motor6.curent*0.8 + (((float)Data[5] / 65536) * Vrefint + 0.002 - 0.5 *Vrefint)*0.2 *1.7857f;
user\Dataex.c(575): warning:  #191-D: type qualifier is meaningless on cast type
          Motor1pid.Kp  = 0.001*( (volatile int16_t)(*(data_buf+4)<<8)|*(data_buf+5) );
user\Dataex.c(576): warning:  #191-D: type qualifier is meaningless on cast type
          Motor1pid.Ki  = 0.001*( (volatile int16_t)(*(data_buf+6)<<8)|*(data_buf+7) );
user\Dataex.c(577): warning:  #191-D: type qualifier is meaningless on cast type
          Motor1pid.Kd  = 0.001*( (volatile int16_t)(*(data_buf+8)<<8)|*(data_buf+9) );
user\Dataex.c(578): warning:  #191-D: type qualifier is meaningless on cast type
          Motor2pid.Kp = 0.001*( (volatile int16_t)(*(data_buf+10)<<8)|*(data_buf+11) );
user\Dataex.c(579): warning:  #191-D: type qualifier is meaningless on cast type
          Motor2pid.Ki = 0.001*( (volatile int16_t)(*(data_buf+12)<<8)|*(data_buf+13) );
user\Dataex.c(580): warning:  #191-D: type qualifier is meaningless on cast type
          Motor2pid.Kd = 0.001*( (volatile int16_t)(*(data_buf+14)<<8)|*(data_buf+15) );
user\Dataex.c(581): warning:  #191-D: type qualifier is meaningless on cast type
          Motor3pid.Kp 	= 0.001*( (volatile int16_t)(*(data_buf+16)<<8)|*(data_buf+17) );
user\Dataex.c(582): warning:  #191-D: type qualifier is meaningless on cast type
          Motor3pid.Ki 	= 0.001*( (volatile int16_t)(*(data_buf+18)<<8)|*(data_buf+19) );
user\Dataex.c(583): warning:  #191-D: type qualifier is meaningless on cast type
          Motor3pid.Kd 	= 0.001*( (volatile int16_t)(*(data_buf+20)<<8)|*(data_buf+21) );
user\Dataex.c(589): warning:  #191-D: type qualifier is meaningless on cast type
  			  Motor4pid.Kp  = 0.001*( (volatile int16_t)(*(data_buf+4)<<8)|*(data_buf+5) );
user\Dataex.c(590): warning:  #191-D: type qualifier is meaningless on cast type
          Motor4pid.Ki  = 0.001*( (volatile int16_t)(*(data_buf+6)<<8)|*(data_buf+7) );
user\Dataex.c(591): warning:  #191-D: type qualifier is meaningless on cast type
          Motor4pid.Kd  = 0.001*( (volatile int16_t)(*(data_buf+8)<<8)|*(data_buf+9) );
user\Dataex.c(592): warning:  #191-D: type qualifier is meaningless on cast type
          Motor5pid.Kp = 0.001*( (volatile int16_t)(*(data_buf+10)<<8)|*(data_buf+11) );
user\Dataex.c(593): warning:  #191-D: type qualifier is meaningless on cast type
          Motor5pid.Ki = 0.001*( (volatile int16_t)(*(data_buf+12)<<8)|*(data_buf+13) );
user\Dataex.c(594): warning:  #191-D: type qualifier is meaningless on cast type
          Motor5pid.Kd = 0.001*( (volatile int16_t)(*(data_buf+14)<<8)|*(data_buf+15) );
user\Dataex.c(595): warning:  #191-D: type qualifier is meaningless on cast type
          Motor6pid.Kp 	= 0.001*( (volatile int16_t)(*(data_buf+16)<<8)|*(data_buf+17) );
user\Dataex.c(596): warning:  #191-D: type qualifier is meaningless on cast type
          Motor6pid.Ki 	= 0.001*( (volatile int16_t)(*(data_buf+18)<<8)|*(data_buf+19) );
user\Dataex.c(597): warning:  #191-D: type qualifier is meaningless on cast type
          Motor6pid.Kd 	= 0.001*( (volatile int16_t)(*(data_buf+20)<<8)|*(data_buf+21) );
user\Dataex.c(602): warning:  #191-D: type qualifier is meaningless on cast type
          Motor1pid.U_From_Pc  = ( (volatile int16_t)(*(data_buf+4)<<8)|*(data_buf+5) );
user\Dataex.c(603): warning:  #191-D: type qualifier is meaningless on cast type
          Motor2pid.U_From_Pc  = ( (volatile int16_t)(*(data_buf+6)<<8)|*(data_buf+7) );
user\Dataex.c(604): warning:  #191-D: type qualifier is meaningless on cast type
          Motor3pid.U_From_Pc  = ( (volatile int16_t)(*(data_buf+8)<<8)|*(data_buf+9) );
user\Dataex.c(605): warning:  #191-D: type qualifier is meaningless on cast type
          Motor4pid.U_From_Pc = ( (volatile int16_t)(*(data_buf+10)<<8)|*(data_buf+11) );
user\Dataex.c(606): warning:  #191-D: type qualifier is meaningless on cast type
          Motor5pid.U_From_Pc = ( (volatile int16_t)(*(data_buf+12)<<8)|*(data_buf+13) );
user\Dataex.c(607): warning:  #191-D: type qualifier is meaningless on cast type
          Motor6pid.U_From_Pc = ( (volatile int16_t)(*(data_buf+14)<<8)|*(data_buf+15) );
user\Dataex.c(727): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  		Right_Leg.Yaw_z = Right_Leg.Yaw_z*0.7f+Yaw1_z*0.3;
user\Dataex.c: 41 warnings, 0 errors
linking...
Program Size: Code=55888 RO-data=1216 RW-data=836 ZI-data=151124  
FromELF: creating hex file...
"h743vit6\h743vit6.axf" - 0 Error(s), 42 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.3.0.pack
                ARM.CMSIS.5.3.0
                CMSIS (Cortex Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.1.1

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32H7xx_DFP.2.8.0.pack
                Keil.STM32H7xx_DFP.2.8.0
                STMicroelectronics STM32H7 Series Device Support and Examples

<h2>Collection of Component include folders:</h2>
  .\RTE\_h743vit6
  D:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include
  D:\Keil_v5\ARM\PACK\Keil\STM32H7xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32H7xx\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.1.1
Build Time Elapsed:  00:00:05
</pre>
</body>
</html>
